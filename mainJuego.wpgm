import wollok.game.*
import nave.*
import alien.*

program SpaceInvaders {
    // Configuración del tablero
    game.title("Space Invaders")
    game.width(10)
    game.height(10)
    game.cellSize(50)  // Tamaño de cada celda

    configurarNivel.iniciarPantallaInicial() //luego de cargar pantalla inicial inicia el juego

    // Iniciar el juego
    //game.start()
}

// Objeto para gestionar el nivel y la velocidad de los aliens
object nivel {
    var nivelActual = 0

    method nivelActual() = nivelActual

    // Incrementa el nivel del juego (hasta un máximo de 3)
    method subirNivel() {
        if (nivelActual < 3) {
            nivelActual += 1
        }

        game.removeTickEvent("moverAliens")
        //configurarNivel.inicializar()
    }

    // Retorna la velocidad de los aliens basada en el nivel actual
    method velocidadAliens() {
        return 5000 / nivelActual  // Aumenta la velocidad al subir de nivel
    }

    // Método para crear la formación de aliens
    method crearAliens() {
        const aliens = []
        const posiciones = [
            game.at(2, 9), game.at(3, 9), game.at(4, 9), game.at(5, 9), game.at(6, 9),
            game.at(2, 8), game.at(3, 8), game.at(4, 8), game.at(5, 8), game.at(6, 8),
            game.at(2, 7), game.at(3, 7), game.at(4, 7), game.at(5, 7), game.at(6, 7)
        ]

        posiciones.forEach({ posicion =>
            const alien = new Alien(position=posicion)  // Crear un nuevo objeto Alien
            alien.initialize(posicion)  // Inicializar la posición del alien correctamente
            aliens.add(alien)  // Agregar el alien a la lista de aliens
        })

        return aliens
    }

    // Método para crear una nueva oleada de aliens
    method nuevaOleada() {
        const nuevaOleada = self.crearAliens()  // Crear la nueva lista de aliens
        nuevaOleada.forEach({ alien => game.addVisual(alien) })  // Agregar los nuevos aliens al juego
        return nuevaOleada  // Retornar la nueva lista de aliens
    }
}

// Configuración de las teclas para mover la nave y disparar
object configurarTeclas {
    method configurar(aliens) {
        keyboard.right().onPressDo({ nave.moverADerecha() })
        keyboard.left().onPressDo({ nave.moverAIzquierda() })
        keyboard.enter().onPressDo({ nave.disparar(aliens) })  // Disparar usando la lista de aliens REVISAR ERROR AL DISPARAR
    }
}

object configurarNivel {
    const imagenDeInicio = new ImagenInicial(position = game.at(0,0))
    method iniciarPantallaInicial()
    {
        if (nivel.nivelActual() == 0)
        {   
            game.addVisual(imagenDeInicio)
            keyboard.enter().onPressDo({ nivel.subirNivel() self.inicializar() })
            game.start()
        }
    }
    method inicializar() 
    {   
        game.removeVisual(imagenDeInicio)

        game.addVisual(nave)

        var aliens = nivel.nuevaOleada()

        game.boardGround("fondo_juego.jpg")

        configurarTeclas.configurar(aliens)


        // Evento `onTick` para mover los aliens y verificar condiciones
        game.onTick(nivel.velocidadAliens(), "moverAliens", {
            if (aliens.size() > 0) {
                aliens.forEach({ alien =>
                    alien.moverAbajo()  // Mover el alien hacia abajo
                    // Verificar si el alien está vivo
                    if (!alien.estaVivo()) {
                        game.removeVisual(alien)  // Eliminar el alien si su vida es 0
                        aliens.remove(alien)  // Remover de la lista de aliens
                    }
                })

                // Verificar si algún alien ha llegado a la parte inferior del tablero
                if (aliens.any({ alien => alien.position().y() <= 0 })) {
                    game.clear()  // Limpia el tablero y termina el juego
                }
            }

            // Verificar si todos los aliens han sido eliminados
            if (aliens.size() == 0) {
                if (nivel.nivelActual() < 3) {  // Si no hemos llegado al tercer nivel
                    game.schedule(2000, {
                        game.clear()  // Limpia el tablero
                        nivel.subirNivel()
                    })
                } else {  // Si hemos llegado al tercer nivel
                    game.say(nave, "¡Felicidades! Has completado todos los niveles.")
                    game.clear()  // Limpia el tablero y termina el juego
                }
            }
        })
    }
}
